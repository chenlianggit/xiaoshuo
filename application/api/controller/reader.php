<?php
class ReaderController extends Controller { protected $userid; protected $userinfo; public function init() { $this->userinfo = M('user')->checkLoginStatus(); $this->userid = isset($this->userinfo['id']) ? $this->userinfo['id'] : 0; } public function loadAction() { $zym_11 = (new User_HabbitModel())->loadReader($this->userid); return $this->success($zym_11); } public function fontsizeAction() { $zym_13 = $this->input->post('fontsize', 'int', 16); (new User_HabbitModel())->save($this->userid, ['fontsize' => $zym_13], 'wap'); return $this->success(); } public function readstyleAction() { $zym_18 = $this->input->request('v', 'int', 0); (new User_HabbitModel())->save($this->userid, ['style' => $zym_18], 'wap'); return $this->success(); } public function moonAction() { $zym_18 = $this->input->request('v', 'int', 0); (new User_HabbitModel())->save($this->userid, ['moon' => $zym_18], 'wap'); return $this->success(); } public function themeAction() { $zym_18 = $this->input->request('v', ['default', 'sheepskin', 'pink', 'purple', 'green', 'white'], 'default'); (new User_HabbitModel())->save($this->userid, ['theme' => $zym_18], 'wap'); return $this->success(); } public function cacheAction() { $zym_18 = $this->input->request('v', 'int', 0); (new User_HabbitModel())->save($this->userid, ['cache' => $zym_18], 'wap'); return $this->success(); } public function getsameChapterAction() { $zym_15 = $this->input->request('novelid', 'int', 0); $zym_16 = $this->input->request('chapterid', 'int', 0); $zym_17 = (new NovelSearch_chapterModel())->setTableId($zym_15)->where(array('novelid' => $zym_15, 'oid' => $zym_16))->field('siteid,name,url')->select(); $zym_5 = $this->model('novelsearch_site')->getnamelist(); $zym_19=[]; foreach ($zym_17 as $zym_9 => $zym_18) { if($zym_5[$zym_18['siteid']]){ $zym_19[] = [ 'siteid'=>$zym_18['siteid'], 'url' => $zym_18['url'], 'name'=>$zym_18['name'], 'sitename' => $zym_5[$zym_18['siteid']]['name'], ]; } } return $this->success($zym_19); } public function getchapterAction() { $zym_15 = $this->input->request('novelid', 'int', 0); $zym_16 = $this->input->request('chapterid', 'int', 0); $zym_8 = $this->input->request('siteid', 'int', 0); $zym_7 = new novelsearch_chapterModel(); if ($zym_8) { $zym_20 = $zym_7->setTableId($zym_15)->where(['novelid' => $zym_15, 'siteid' => $zym_8, 'oid' => $zym_16])->find(); } else { $zym_19 = $zym_7->getweightlistbyoid($zym_15, $zym_16); if (count($zym_19['free']) > 0) { $zym_20 = $zym_7->selectchapter($zym_19['free']); } else { $zym_20 = $zym_7->selectchapter($zym_19['vip']); } } $zym_14 = $zym_7->getinfo($zym_15, $zym_20['id'], [], true, false, 'id', 'read'); $zym_17 = (new CollectModel($zym_14['siteid'], 'siteid'))->getchapter($zym_14['url'], $zym_14['time']); if ($zym_17['status'] == 1 || strlen($zym_17['data'])>10) { $zym_14['content'] = showchapter($zym_17['data']); } else { $zym_14['content'] = $this->config->get('greenread_errormsg', '转码失败！请您使用右上换源切换源站阅读或者直接前往源网站进行阅读！'); } $zym_11 = [ 'info' => ['id' => $zym_14['oid'], 'title' => $zym_14['name'], 'content' => br2p($zym_14['content']),'url'=>$zym_14['url_read']], 'from' => ['id' => $zym_14['siteid'], 'url' => $zym_14['url']], 'next' => ['id' => $zym_14['nextinfo']['id'], 'url' => $zym_14['nextinfo']['url']], 'prev' => ['id' => $zym_14['preinfo']['id'], 'url' => $zym_14['preinfo']['url']], ]; return $this->success($zym_11); } public function markAction() { $zym_15 = $this->input->post('id', 'int', 0); $zym_6 = $this->input->post('type', ['add', 'remove'], 'add'); if ($this->userid) { if ($zym_6 == 'add') { if (isset($this->userinfo['marklist'][$zym_15])) { return $this->error('这本书已经在您收藏夹中了', 'alreadyin'); } else { (new User_MarkModel())->addusermark($this->userid, $zym_15); return $this->success(); } } else { $zym_17 = (new User_MarkModel())->where(['userid' => $this->userid, 'novelid' => $zym_15])->delete(); return $this->success((new User_MarkModel())->getLastSql(), $zym_17); } } else { return $this->error('nologin'); } } public function updatemarkAction() { $zym_10=new User_MarkModel(); $zym_15 = $this->input->request('novelid', 'int', 0); $zym_16 = $this->input->request('chapterid', 'int', 1); $zym_10->autorecord($zym_15, $zym_16); $zym_12=$zym_10->gethistoryinfo(); $zym_12[$zym_15]=$zym_16; $zym_10->sethistory($zym_12); return $this->success(); } }
?>